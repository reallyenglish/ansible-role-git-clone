---

- include_vars: "{{ ansible_os_family }}.yml"

- include: "install-{{ ansible_os_family }}.yml"

- name: Assert that git_clone_repositories has mandatory keys, and `state` in all items is either present or absent
  assert:
    msg: All items must have `dest`, `repo`, and `state` defined either `present` or `absent`
    that:
      - (item.dest is defined) and (item.dest | length > 0)
      - (item.repo is defined) and (item.repo | length > 0)
      - item.state is defined
      - item.state == 'present' or item.state == 'absent'
  with_items: "{{ git_clone_repositories }}"

- name: Clone repositories
  git:
    accept_hostkey: "{{ item.accept_hostkey | default(omit) }}"
    clone: yes
    dest: "{{ item.dest }}"
    force: "{{ item.force | default(omit) }}"
    recursive: "{{ item.recursive | default(omit) }}"
    remote: "{{ item.remote | default(omit) }}"
    repo: "{{ item.repo }}"
    track_submodules: "{{ item.track_submodules | default(omit) }}"
    umask: "{{ item.umask | default(omit) }}"
    # XXX item.update does not work. neither `default(omit)`
    # https://github.com/ansible/ansible/issues/11524
    update: "{{ item['update'] | default('yes') | bool }}"
    version: "{{ item.version | default(omit) }}"
  become: "{% if 'user' in item %}{{ 'yes' | bool }}{% else %}{{ omit }}{% endif %}"
  become_user: "{{ item.user | default(omit) }}"
  with_items: "{{ git_clone_repositories }}"
  when:
    - item.state == 'present'

- name: Remove repositories
  file:
    path: "{{ item.dest }}"
    state: absent
  with_items: "{{ git_clone_repositories }}"
  when:
    - item.state == 'absent'
